# This is an example plymouth plugin script

# Load the image of the small Q
q_image = Image("qicon.png");

#Load the image of the background
background_image = Image("mainbg.png");

#Load the color swatch
swatch_image = Image("bgcolor.png");

#Figure out the screen ratios of the screen and the background image
screen_ratio = Window.GetHeight() / Window.GetWidth();
background_ratio = background_image.GetHeight() / background_image.GetWidth();

#Scale the background image
#if(screen_ratio > background_ratio)
#  {
#    scale_factor = Window.GetHeight() / background_image.GetHeight();
#  }
#else
#  {
#    scale_factor = Window.GetWidth() / background_image.GetWidth();
#  }

#background_scaled = background_image.Scale(background_image.GetWidth() * scale_factor, background_image.GetHeight() * scale_factor);
swatch_scaled = swatch_image.Scale(Window.GetWidth(), Window.GetHeight());

# Create the sprites
q_sprite = Sprite(q_image);
#background_sprite = Sprite(background_scaled);
background_sprite = Sprite(background_image);
swatch_sprite = Sprite(swatch_scaled);

# Setup the main background image
#background_sprite.SetX(Window.GetX() + Window.GetWidth() / 2 - background_scaled.GetWidth() / 2);
#background_sprite.SetY(Window.GetY() + Window.GetHeight() / 2 - background_scaled.GetHeight() / 2);

background_sprite.SetX(Window.GetX() + Window.GetWidth() / 2 - background_image.GetWidth() / 2);
background_sprite.SetY(Window.GetY() + Window.GetHeight() / 2 - background_image.GetHeight() / 2);
background_sprite.SetZ(-1);

# Setup the blank color swatch behind the main background image
swatch_sprite.SetPosition(0,0,-10);

# Make the spinning Q logo by the reticulating splines
q_sprite.SetX(Window.GetX() + Window.GetWidth() / 2 - 0.15 * background_image.GetWidth());
q_sprite.SetY(Window.GetY() + Window.GetHeight() / 2 + 0.36 * background_image.GetHeight());
q_sprite.SetZ(1);

#Make the blank space around the main background image the same
#if(screen_ratio > background_ratio)
#  {
#    #Need to add space on the height
#    dist = Window.GetHeight() - background_scaled.GetHeight();
#    swatch_scaled = swatch_image.Scale(Window.GetWidth(), dist/2);
#    swatch_sprite1 = Sprite(swatch_scaled);
#    swatch_sprite2 = Sprite(swatch_scaled);
#    swatch_sprite1.SetPosition(0, 0, -10);
#    swatch_sprite2.SetPosition(0, Window.GetY() + Window.GetHeight() - swatch_scaled.GetHeight(), -10);
#  }
#else
#  {
#    #Need to add space on the width
#    dist = Window.GetWith() - background_scaled.GetWidth();
#    swatch_scaled = swatch_image.Scale(dist/2, Window.GetHeight());
#    swatch_sprite1 = Sprite(swatch_scaled);
#    swatch_sprite2 = Sprite(swatch_scaled);
#    swatch_sprite1.SetPosition(0, 0, -10);
#    swatch_sprite2.SetPosition(Window.GetX() + Window.GetWidth() - swatch_scaled.GetWidth(), 0, -10);
#  }

progress = 0;
fun refresh_callback ()
  {
    q_sprite.SetImage(q_image.Rotate(progress/100));
    progress+=3;
  }
  
Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Progress Bar --------------------------------

progress_box.image = Image("progress_box.png");
progress_box.sprite = Sprite(progress_box.image);

progress_box.x = Window.GetWidth()  / 2 -    progress_box.image.GetWidth()  / 2;
progress_box.y = Window.GetHeight() * 0.75 - progress_box.image.GetHeight() / 2;
progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 0);

progress_bar.original_image = Image("progress_bar.png");
progress_bar.sprite = Sprite();

progress_bar.x = Window.GetWidth()  / 2 -        progress_bar.original_image.GetWidth() / 2;
progress_bar.y = Window.GetHeight() / 2 * 1.5  - progress_box.image.GetHeight() / 2 + (progress_box.image.GetHeight() - progress_bar.original_image.GetHeight()) / 2;
progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 1);

fun progress_callback (duration, progress)
  {
    if (progress_bar.image.GetWidth () != Math.Int (progress_bar.original_image.GetWidth () * progress))
      {
        progress_bar.image = progress_bar.original_image.Scale(progress_bar.original_image.GetWidth(progress_bar.original_image) * progress, progress_bar.original_image.GetHeight());
        progress_bar.sprite.SetImage (progress_bar.image);
      }
  }

Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);

fun message_callback (text)
{
  my_image = Image.Text(text, 0, 0, 0);
  message_sprite.SetImage(my_image);
  message_sprite.SetPosition(Window.GetX() + Window.GetWidth()/3, Window.GetY() + 0.8*Window.GetHeight(), 10);
}

Plymouth.SetMessageFunction(message_callback);
